version: "3"
services:
  mysql:
    image: mysql:5.7
    volumes:
      - ./mysql/data:/var/lib/mysql
      - ./mysql/db:/docker-entrypoint-initdb.d
      - ./logs/mysql:/var/log/mysql
      - ../provisioning/ansible/roles/web/files/my.cnf:/etc/mysql/conf.d/my.cnf
      - ../provisioning/ansible/roles/web/files/slow-mysqld.cnf:/etc/mysql/conf.d/slowquery.cnf

    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: isuumo
      MYSQL_USER: isucon
      MYSQL_PASSWORD: isucon
    ports:
      - "3306:3306"

  nodejs:
    build: ./nodejs
    entrypoint:
      - dockerize
      - -timeout
      - 60s
      - -wait
      - tcp://mysql:3306
    volumes:
      - ./mysql/db:/mysql/db
      - ./fixture:/fixture
    environment:
      MYSQL_DATABASE: isuumo
      MYSQL_USER: isucon
      MYSQL_PASSWORD: isucon
      MYSQL_HOST: mysql
      SERVER_PORT: 1323
    ports:
      - "1323:1323"
    depends_on:
      - mysql
    command: npm start

  ruby:
    build: ./ruby
    entrypoint:
      - dockerize
      - -timeout
      - 60s
      - -wait
      - tcp://mysql:3306
    volumes:
      - ./mysql/db:/mysql/db
      - ./fixture:/fixture
    environment:
      MYSQL_DBNAME: isuumo
      MYSQL_USER: isucon
      MYSQL_PASS: isucon
      MYSQL_HOST: mysql
      SERVER_PORT: 1323
    ports:
      - "1323:1323"
    depends_on:
      - mysql
    command: bundle exec unicorn -c unicorn.conf.rb

  deno:
    build: ./deno
    entrypoint:
      - dockerize
      - -timeout
      - 60s
      - -wait
      - tcp://mysql:3306
    volumes:
      - ./mysql/db:/mysql/db
      - ./fixture:/fixture
      - ../provisioning/ansible/roles/web/files/my.cnf:/etc/mysql/conf.d/my.cnf
    environment:
      MYSQL_DATABASE: isuumo
      MYSQL_USER: isucon
      MYSQL_PASSWORD: isucon
      MYSQL_HOST: mysql
      SERVER_PORT: 1323
    ports:
      - "1323:1323"
    depends_on:
      - mysql
    command: make run

  api-server:
    build: ./go
    entrypoint:
      - dockerize
      - -timeout
      - 60s
      - -wait
      - tcp://mysql:3306
    volumes:
      - ./mysql/db:/go/src/mysql/db
      - ./fixture:/go/src/fixture
    environment:
      MYSQL_DATABASE: isuumo
      MYSQL_USER: isucon
      MYSQL_PASSWORD: isucon
      MYSQL_HOST: mysql
      SERVER_PORT: 1323
    ports:
      - "1323:1323"
    depends_on:
      - mysql
    command: /go/src/isuumo/isuumo

  python:
    build: ./python
    entrypoint:
      - dockerize
      - -timeout
      - 60s
      - -wait
      - tcp://mysql:3306
    volumes:
      - ./mysql/db:/mysql/db
      - ./fixture:/fixture
    environment:
      MYSQL_DATABASE: isuumo
      MYSQL_USER: isucon
      MYSQL_PASSWORD: isucon
      MYSQL_HOST: mysql
      SERVER_PORT: 1323
    ports:
      - "1323:1323"
    depends_on:
      - mysql
    command: python app.py

  frontend:
    build: ./frontend
    volumes:
      - ./nginx/out:/frontend/out

  nginx:
    build: ./nginx
    volumes:
        - ../provisioning/ansible/roles/web/files/accesslog-nginx.conf.template:/etc/nginx/nginx.conf.template
        - ./logs/nginx:/var/log/nginx
        - ./nginx/cond.d:/etc/nginx/conf.d
        - ./nginx/out:/www/data
    ports:
      - "8080:80"
    entrypoint:
      - dockerize
      - -timeout
      - 60s
      - -wait
      - http://api-server:1323/api/estate/search/condition
    environment:
      API_SERVER: api-server
    depends_on:
      - frontend
    command: >
      /bin/sh -c
      "envsubst '
      $$API_SERVER
      '< /etc/nginx/nginx.conf.template
      > /etc/nginx/nginx.conf
      && nginx -g 'daemon off;'"

  benchmarker:
    build: ../bench
    volumes:
      - ../initial-data:/tmp/initial-data
      - ./logs/bench:/var/log/bench
    entrypoint:
      - dockerize
      - -timeout
      - 60s
      - -wait
      - http://nginx
    depends_on:
      - api-server
    command: /go/src/bench/bench -target-url=http://nginx -data-dir=/tmp/initial-data
